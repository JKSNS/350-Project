-- Table: TIER
CREATE TABLE TIER(
    TierID INT NOT NULL AUTO_INCREMENT,
    TierName VARCHAR(50) NOT NULL,
    TierLevel INT NOT NULL,
    PRIMARY KEY(TierID)
);
-- Table: DB_USER
CREATE TABLE DB_USER(
    Username VARCHAR(50) NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    -- Use hashes generated by generate_password_hash()
    Email VARCHAR(100),
    TierID INT NOT NULL,
    is_admin BOOLEAN DEFAULT FALSE,
    Refers_Username VARCHAR(50),
    PRIMARY KEY(Username),
    FOREIGN KEY(TierID) REFERENCES TIER(TierID),
    FOREIGN KEY(Refers_Username) REFERENCES DB_USER(Username)
);
-- Table: SALES_TRANSACTION
CREATE TABLE SALES_TRANSACTION(
    TimeOfTransaction DATE NOT NULL,
    CryptoUsed VARCHAR(10) NOT NULL,
    Amount DECIMAL(18, 8) NOT NULL,
    TransactionID INT NOT NULL AUTO_INCREMENT,
    Username VARCHAR(50) NOT NULL,
    TierID INT NOT NULL,
    PRIMARY KEY(TransactionID),
    FOREIGN KEY(Username) REFERENCES DB_USER(Username),
    FOREIGN KEY(TierID) REFERENCES TIER(TierID)
);
-- Table: MACHINE
CREATE TABLE MACHINE(
    MachineID INT NOT NULL AUTO_INCREMENT,
    IPAddress VARCHAR(45) NOT NULL,
    LastCheckIn DATE NOT NULL,
    OperatingSystem VARCHAR(50) NOT NULL,
    VERSION VARCHAR(50) NOT NULL,
    Cores INT NOT NULL,
    Ram INT NOT NULL,
    TierID INT NOT NULL,
    Username VARCHAR(50) NOT NULL,
    PRIMARY KEY(MachineID),
    FOREIGN KEY(TierID) REFERENCES TIER(TierID),
    FOREIGN KEY(Username) REFERENCES DB_USER(Username)
);
-- Table: TASKS
CREATE TABLE TASKS(
    TaskID INT NOT NULL AUTO_INCREMENT,
    TaskType VARCHAR(50) NOT NULL,
    Username VARCHAR(50) NOT NULL,
    PRIMARY KEY(TaskID),
    FOREIGN KEY(Username) REFERENCES DB_USER(Username)
);
-- Table: EXECUTES
CREATE TABLE EXECUTES(
    TaskID INT NOT NULL,
    MachineID INT NOT NULL,
    PRIMARY KEY(TaskID, MachineID),
    FOREIGN KEY(TaskID) REFERENCES TASKS(TaskID),
    FOREIGN KEY(MachineID) REFERENCES MACHINE(MachineID)
);
