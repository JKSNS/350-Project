# Pasting this into mysql will create a test database with our specified tables, and populate the tables with example data. The data in all the tables is displayed at the end of the script to allow a quick verification that the statements worked properly.

CREATE database test;
USE test;

CREATE TABLE TIER
(
  TierID SERIAL NOT NULL,
  TierName VARCHAR(100) NOT NULL,
  TierLevel INT NOT NULL,
  PRIMARY KEY (TierID)
);

CREATE TABLE USERS
(
  Username VARCHAR(100) NOT NULL,
  Password VARCHAR(100) NOT NULL,
  Email VARCHAR(100),
  TierID BIGINT UNSIGNED NOT NULL,
  Refers_Username VARCHAR(100),
  is_admin BOOLEAN DEFAULT FALSE,
  PRIMARY KEY (Username),
  FOREIGN KEY (TierID) REFERENCES TIER(TierID),
  FOREIGN KEY (Refers_Username) REFERENCES USERS(Username)
);

CREATE TABLE SALES_TRANSACTION
(
  TransactionID SERIAL NOT NULL,
  TimeOfTransaction DATE NOT NULL,
  CryptoUsed VARCHAR(100) NOT NULL CHECK (CryptoUsed = 'XMR'),
  Amount DECIMAL(10,2) NOT NULL CHECK (Amount > 0),
  Username VARCHAR(100) NOT NULL,
  TierID BIGINT UNSIGNED NULL,
  PRIMARY KEY (TransactionID),
  FOREIGN KEY (Username) REFERENCES USERS(Username),
  FOREIGN KEY (TierID) REFERENCES TIER(TierID)
);

CREATE TABLE MACHINE
(
  MachineID SERIAL NOT NULL,
  IPAddress VARCHAR(100) NOT NULL,
  LastCheckIn DATE NOT NULL,
  OperatingSystem VARCHAR(100) NOT NULL,
  Version VARCHAR(100) NOT NULL,
  Cores INT NOT NULL,
  Ram INT NOT NULL,
  TierID BIGINT UNSIGNED NOT NULL,
  Username VARCHAR(100) NOT NULL,
  PRIMARY KEY (MachineID),
  FOREIGN KEY (TierID) REFERENCES TIER(TierID),
  FOREIGN KEY (Username) REFERENCES USERS(Username)
);

CREATE TABLE TASKS
(
  TaskID SERIAL NOT NULL,
  TaskType VARCHAR(100) NOT NULL,
  Username VARCHAR(100) NOT NULL,
  PRIMARY KEY (TaskID),
  FOREIGN KEY (Username) REFERENCES USERS(Username)
);

CREATE TABLE Executes
(
  TaskID BIGINT UNSIGNED NOT NULL,
  MachineID BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (TaskID, MachineID),
  FOREIGN KEY (TaskID) REFERENCES TASKS(TaskID),
  FOREIGN KEY (MachineID) REFERENCES MACHINE(MachineID)
);




INSERT INTO TIER (TierID, TierName, TierLevel)
VALUES 
(1, 'Basic', 1),
(2, 'Pro', 2),
(3, 'Elite', 3);

INSERT INTO USERS (Username, Password, Email, TierID, Refers_Username)
VALUES 
('atay001', '5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8', 'atay001@example.com', 1, null),
('bdev002', '6f1ed002ab5595859014ebf0951522d9', 'bdev002@example.com', 2, 'atay001'),
('cops003', '1f3870be274f6c49b3e31a0c6728957f', 'cops003@example.com', 3, 'bdev002'),
('dnet004', '3c59dc048e8850243be8079a5c74d079', 'dnet004@example.com', 1, null),
('epwn005', 'b6d767d2f8ed5d21a44b0e5886680cb9', 'epwn005@example.com', 2, 'cops003');


INSERT INTO SALES_TRANSACTION (TransactionID, TimeOfTransaction, CryptoUsed, Amount, Username, TierID)
VALUES 
(1, '2025-02-28', 'XMR', 0.01, 'atay001', 1),
(2, '2025-03-01', 'XMR', 0.005, 'bdev002', 2),
(3, '2025-03-02', 'XMR', 0.03, 'cops003', 3),
(4, '2025-03-03', 'XMR', 0.5, 'dnet004', 1),
(5, '2025-03-04', 'XMR', 0.02, 'epwn005', 2);


INSERT INTO TASKS (TaskID, TaskType, Username)
VALUES 
(1, 'keylogger', 'atay001'),
(2, 'ransomware', 'bdev002'),
(3, 'ddos', 'cops003'),
(4, 'miner', 'dnet004'),
(5, 'rootkit', 'epwn005');

INSERT INTO MACHINE (MachineID, IPAddress, LastCheckIn, OperatingSystem, Version, Cores, Ram, TierID, Username)
VALUES 
(1, '192.168.0.11', '2025-02-28', 'Windows 11', '24H2', 4, 32, 1, 'atay001'),
(2, '192.168.0.12', '2025-03-01', 'Linux', '6.1', 8, 16, 2, 'bdev002'),
(3, '192.168.0.13', '2025-03-02', 'macOS', '14.3', 6, 8, 3, 'cops003'),
(4, '192.168.0.14', '2025-03-03', 'Windows 10', '22H2', 2, 4, 1, 'dnet004'),
(5, '192.168.0.15', '2025-03-04', 'FreeBSD', '13.2', 4, 32, 2, 'epwn005');


INSERT INTO Executes (TaskID, MachineID)
VALUES 
(1, 1),
(2, 2),
(3, 3),
(4, 4),
(5, 5);

SELECT * FROM Executes;
SELECT * FROM MACHINE;
SELECT * FROM SALES_TRANSACTION;
SELECT * FROM TASKS;
SELECT * FROM TIER;
SELECT * FROM USERS;
