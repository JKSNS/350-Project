CREATE TABLE TIER
(
  TierID SERIAL NOT NULL,
  TierName VARCHAR NOT NULL,
  TierLevel INT NOT NULL,
  PRIMARY KEY (TierID)
);

CREATE TABLE SALES_TRANSACTION
(
  TimeOfTranscation DATE NOT NULL,
  CryptoUsed VARCHAR NOT NULL,
  Amount INT NOT NULL,
  TransactionID SERIAL NOT NULL,
  Username VARCHAR NOT NULL,
  TierID INT NOT NULL,
  PRIMARY KEY (TransactionID),
  FOREIGN KEY (Username) REFERENCES USER(Username),
  FOREIGN KEY (TierID) REFERENCES TIER(TierID)
);

CREATE TABLE USER
(
  Password VARCHAR NOT NULL,
  Email VARCHAR,
  Username VARCHAR NOT NULL,
  TierID INT NOT NULL,
  Refers_Username VARCHAR,
  PRIMARY KEY (Username),
  FOREIGN KEY (TierID) REFERENCES TIER(TierID),
  FOREIGN KEY (Refers_Username) REFERENCES USER(Username)
);

CREATE TABLE MACHINE
(
  MachineID SERIAL NOT NULL,
  IPAddress VARCHAR NOT NULL,
  LastCheckIn DATE NOT NULL,
  OperatingSystem VARCHAR NOT NULL,
  Version VARCHAR NOT NULL,
  Cores INT NOT NULL,
  Ram INT NOT NULL,
  TierID INT NOT NULL,
  Username VARCHAR NOT NULL,
  PRIMARY KEY (MachineID),
  FOREIGN KEY (TierID) REFERENCES TIER(TierID),
  FOREIGN KEY (Username) REFERENCES USER(Username)
);

CREATE TABLE Tasks
(
  TaskID SERIAL NOT NULL,
  TaskType VARCHAR NOT NULL,
  Username VARCHAR NOT NULL,
  PRIMARY KEY (TaskID),
  FOREIGN KEY (Username) REFERENCES USER(Username)
);

CREATE TABLE Executes
(
  TaskID INT NOT NULL,
  MachineID INT NOT NULL,
  PRIMARY KEY (TaskID, MachineID),
  FOREIGN KEY (TaskID) REFERENCES Tasks(TaskID),
  FOREIGN KEY (MachineID) REFERENCES MACHINE(MachineID)
);
