CREATE TABLE TIER
(
  TierID SERIAL NOT NULL,
  TierName VARCHAR(100) NOT NULL,
  TierLevel INT NOT NULL,
  PRIMARY KEY (TierID)
);

CREATE TABLE USERS
(
  Username VARCHAR(100) NOT NULL,
  Password VARCHAR(100) NOT NULL,
  Email VARCHAR(100),
  TierID BIGINT UNSIGNED NOT NULL,
  Refers_Username VARCHAR(100),
  PRIMARY KEY (Username),
  FOREIGN KEY (TierID) REFERENCES TIER(TierID),
  FOREIGN KEY (Refers_Username) REFERENCES USERS(Username)
);

CREATE TABLE SALES_TRANSACTION
(
  TransactionID SERIAL NOT NULL,
  TimeOfTransaction DATE NOT NULL,
  CryptoUsed VARCHAR(100) NOT NULL CHECK (CryptoUsed = 'XMR'),
  Amount DECIMAL(10,2) NOT NULL CHECK (Amount > 0),
  Username VARCHAR(100) NOT NULL,
  TierID BIGINT UNSIGNED NULL,
  PRIMARY KEY (TransactionID),
  FOREIGN KEY (Username) REFERENCES USERS(Username),
  FOREIGN KEY (TierID) REFERENCES TIER(TierID)
);

CREATE TABLE MACHINE
(
  MachineID SERIAL NOT NULL,
  IPAddress VARCHAR(100) NOT NULL,
  LastCheckIn DATE NOT NULL,
  OperatingSystem VARCHAR(100) NOT NULL,
  Version VARCHAR(100) NOT NULL,
  Cores INT NOT NULL,
  Ram INT NOT NULL,
  TierID BIGINT UNSIGNED NOT NULL,
  Username VARCHAR(100) NOT NULL,
  PRIMARY KEY (MachineID),
  FOREIGN KEY (TierID) REFERENCES TIER(TierID),
  FOREIGN KEY (Username) REFERENCES USERS(Username)
);

CREATE TABLE TASKS
(
  TaskID SERIAL NOT NULL,
  TaskType VARCHAR(100) NOT NULL,
  Username VARCHAR(100) NOT NULL,
  PRIMARY KEY (TaskID),
  FOREIGN KEY (Username) REFERENCES USERS(Username)
);

CREATE TABLE Executes
(
  TaskID BIGINT UNSIGNED NOT NULL,
  MachineID BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (TaskID, MachineID),
  FOREIGN KEY (TaskID) REFERENCES TASKS(TaskID),
  FOREIGN KEY (MachineID) REFERENCES MACHINE(MachineID)
);
